/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = 
    /* color: #0b4a8b */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[25.67758947139908, -10.52500539578282],
          [25.67758947139908, -10.831343855184292],
          [26.285562854675604, -10.831343855184292],
          [26.285562854675604, -10.52500539578282]]], null, false),
    mines = ee.FeatureCollection("users/EmilyNason/cod_mines_curated_all_opendata_p_ipis"),
    l8 = ee.ImageCollection("LANDSAT/LC08/C02/T1_L2"),
    gsw = ee.Image("JRC/GSW1_3/GlobalSurfaceWater"),
    area3 = 
    /* color: #98ff00 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[26.117306035200816, -10.551319560770521],
          [26.117306035200816, -10.632650522900946],
          [26.248455327193003, -10.632650522900946],
          [26.248455327193003, -10.551319560770521]]], null, false),
    area1 = 
    /* color: #98ff00 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[25.783982219615126, -10.760592214819402],
          [25.783982219615126, -10.804773403670321],
          [25.882344188609267, -10.804773403670321],
          [25.882344188609267, -10.760592214819402]]], null, false),
    area2 = 
    /* color: #98ff00 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[25.883463192760367, -10.653415341387422],
          [25.883463192760367, -10.684961077984651],
          [25.918653775035757, -10.684961077984651],
          [25.918653775035757, -10.653415341387422]]], null, false),
    area4 = 
    /* color: #d63000 */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[25.961694541782418, -10.617121740523016],
          [25.961694541782418, -10.656262872369753],
          [26.00804311355976, -10.656262872369753],
          [26.00804311355976, -10.617121740523016]]], null, false),
    noMine = 
    /* color: #d63000 */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[26.05587044825878, -10.73615043816951],
          [26.05587044825878, -10.787712996362622],
          [26.14122124360419, -10.787712996362622],
          [26.14122124360419, -10.73615043816951]]], null, false);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
Map.centerObject(geometry, 11.5);
// Applies scaling factors.
function applyScaleFactors(image) {
  var opticalBands = image.select('SR_B.').multiply(0.0000275).add(-0.2);
  var thermalBands = image.select('ST_B.*').multiply(0.00341802).add(149.0);
  return image.addBands(opticalBands, null, true)
              .addBands(thermalBands, null, true);
}

var before = l8.filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filter(ee.Filter.date('2016-06-01', '2017-01-01'))
  .filter(ee.Filter.bounds(geometry));
var after = l8.filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filter(ee.Filter.date('2021-06-01', '2022-01-01'))
  .filter(ee.Filter.bounds(geometry));
before = before.map(applyScaleFactors).median().clip(geometry);
after = after.map(applyScaleFactors).median().clip(geometry);

var rgbVis = {
  bands: ['SR_B4', 'SR_B3', 'SR_B2'],
  min: 0.0,
  max: 0.3,
};
  
var addIndices = function(image) {
  var ndvi = image.normalizedDifference(['SR_B5', 'SR_B4']).rename(['ndvi']); // NIR, RED
  var clay = image.normalizedDifference(['SR_B6', 'SR_B7']).rename(['clay']); // SWIR1, SWIR2
  var iron = image.normalizedDifference(['SR_B4', 'SR_B2']).rename(['iron']); // RED, BLUE
  var ndmi = image.normalizedDifference(['SR_B5', 'SR_B6']).rename(['ndmi']); // NIR, SWIR1
  var vigs = image.expression(
    '((A-B)/(A+B)) + ((C-B)/(C+B))/2 + ((C-D)/(C+D)) + ((C-D)/(C+D))/2 + ((C-E)/(C+E)) + ((C-E)/(C+E))/2', {
    'A': image.select('SR_B3'), // GREEN
    'B': image.select('SR_B4'), // RED
    'C': image.select('SR_B5'), // NIR
    'D': image.select('SR_B6'), // SWIR1
    'E': image.select('SR_B7'), // SWIR2
    }).rename('vigs');
  return image.addBands(ndvi).addBands(clay).addBands(iron).addBands(ndmi)
    .addBands(vigs);
};

var afterIndices = addIndices(after);
var beforeIndices = addIndices(before);
var ndviVis = {min:0, max:1, palette: ['white', 'green']};
var clayVis = {min:0, max:0.5, palette: ['white', 'brown']};
var ironVis = {min:0, max:0.5, palette: ['white', 'gray']};
var ndmiVis = {min:0, max:1, palette: ['white', 'blue']};
var vigsVis = {min:0, max:3, palette: ['white', 'purple']};

Map.addLayer(before, rgbVis, '2016');
Map.addLayer(after, rgbVis, '2021');
Map.addLayer(beforeIndices.select('ndvi'), ndviVis, 'NDVI 2016');
Map.addLayer(afterIndices.select('ndvi'), ndviVis, 'NDVI 2021');
Map.addLayer(beforeIndices.select('clay'), clayVis, 'Clay 2016');
Map.addLayer(afterIndices.select('clay'), clayVis, 'Clay 2021');
Map.addLayer(beforeIndices.select('iron'), ironVis, 'Iron 2016');
Map.addLayer(afterIndices.select('iron'), ironVis, 'Iron 2021');
Map.addLayer(beforeIndices.select('ndmi'), ndmiVis, 'NDMI 2016', false);
Map.addLayer(afterIndices.select('ndmi'), ndmiVis, 'NDMI 2021', false);
Map.addLayer(beforeIndices.select('vigs'), vigsVis, 'VIGS 2016');
Map.addLayer(afterIndices.select('vigs'), vigsVis, 'VIGS 2021');

// Changes in Indices
var cpThreshold = 8;
var permanentWater = gsw.select('seasonality').gte(5).clip(geometry);

// NDVI
// low ndvi -> possible existing mining
// 2016
var miningNDVI2016 = beforeIndices.select('ndvi').lt(0.18).rename('miningNDVI').selfMask();
var miningNDVI2016 = miningNDVI2016.where(permanentWater,0).selfMask();
var connectNDVI2016 = miningNDVI2016.connectedPixelCount(25);
var miningNDVI2016 = miningNDVI2016.updateMask(connectNDVI2016.gt(cpThreshold));
Map.addLayer(miningNDVI2016, {min:0, max:1, palette: ['yellow']}, 'Possible Mining Area 2016');
// 2021
var miningNDVI2021 = afterIndices.select('ndvi').lt(0.18).rename('miningNDVI').selfMask();
var miningNDVI2021 = miningNDVI2021.where(permanentWater,0).selfMask();
var connectNDVI2021 = miningNDVI2021.connectedPixelCount(25);
var miningNDVI2021 = miningNDVI2021.updateMask(connectNDVI2021.gt(cpThreshold));
Map.addLayer(miningNDVI2021, {min:0, max:1, palette: ['orange']}, 'Possible Mining Area 2021');
//ndvi loss -> possible new mining
var differenceNDVI = beforeIndices.select('ndvi').divide(afterIndices.select('ndvi'));
var threshold = 1.75;
var newMiningNDVI = differenceNDVI.gt(threshold).rename('newMiningNDVI').selfMask();
var newMiningNDVI = newMiningNDVI.where(permanentWater,0).selfMask();
var connectNDVI = newMiningNDVI.connectedPixelCount(25);
var newMiningNDVI = newMiningNDVI.updateMask(connectNDVI.gt(cpThreshold));
Map.addLayer(newMiningNDVI, {min:0, max:1, palette: ['red']}, 'Possible New Mining Area');

// VIGS
// // low VIGS - did not show much - selects too much, not unique to mining
// // 2016
// var miningVIGS2016 = beforeIndices.select('vigs').lt(.05).rename('miningVIGS').selfMask();
// var miningVIGS2016 = miningVIGS2016.where(permanentWater,0).selfMask();
// var connectVIGS2016 = miningVIGS2016.connectedPixelCount(25);
// var miningVIGS2016 = miningVIGS2016.updateMask(connectVIGS2016.gt(cpThreshold));
// Map.addLayer(miningVIGS2016, {min:0, max:1, palette: ['yellow']}, 'Possible Mining Area 2016 (VIGS)');
// // 2021
// var miningVIGS2021 = afterIndices.select('vigs').lt(.05).rename('miningVigs').selfMask();
// var miningVIGS2021 = miningVIGS2021.where(permanentWater,0).selfMask();
// var connectVIGS2021 = miningVIGS2021.connectedPixelCount(25);
// var miningVIGS2021 = miningVIGS2021.updateMask(connectVIGS2021.gt(cpThreshold));
// Map.addLayer(miningVIGS2021, {min:0, max:1, palette: ['orange']}, 'Possible Mining Area 2021 (VIGS');

// VIGS loss -> becomes an outline of new mining sites
// shows new strained vegetation - demonstration of how expanded mining has expanded vegetation stress
// could identify mines through analysis of areas surrounded by new vegetation stress
var differenceVIGS = beforeIndices.select('vigs').divide(afterIndices.select('vigs'));
var threshold = 1.75;
var newMiningVIGS = differenceVIGS.gt(threshold).rename('newMining').selfMask();
var newMiningVIGS = newMiningVIGS.where(permanentWater,0).selfMask();
var connectVIGS = newMiningVIGS.connectedPixelCount(25);
var newMiningVIGS = newMiningVIGS.updateMask(connectVIGS.gt(cpThreshold));
Map.addLayer(newMiningVIGS, {min:0, max:1, palette: ['D772FD']}, 'New Vegetation Stress Due to Mining (VIGS)');

// CLAY
// low clay - potential mining -> clay area possibly has been cleared
// 2016
var miningClay2016 = beforeIndices.select('clay').lt(0.06).rename('miningClay').selfMask();
var miningClay2016 = miningClay2016.where(permanentWater,0).selfMask();
var connectClay2016 = miningClay2016.connectedPixelCount(25);
var miningClay2016 = miningClay2016.updateMask(connectClay2016.gt(cpThreshold));
Map.addLayer(miningClay2016, {min:0, max:1, palette: ['FB9FF9']}, 'Possible Mining Area 2016 (Clay)');
// 2021
var miningClay2021 = afterIndices.select('clay').lt(0.06).rename('miningClay').selfMask();
var miningClay2021 = miningClay2021.where(permanentWater,0).selfMask();
var connectClay2021 = miningClay2021.connectedPixelCount(25);
var miningClay2021 = miningClay2021.updateMask(connectClay2021.gt(cpThreshold));
Map.addLayer(miningClay2021, {min:0, max:1, palette: ['FF70FC']}, 'Possible Mining Area 2021 (Clay)');
// clay loss -> active mining
var differenceClay = beforeIndices.select('clay').divide(afterIndices.select('clay'));
var threshold = 1.85;
var newMiningClay = differenceClay.gt(threshold).rename('newMiningClay').selfMask();
var newMiningClay = newMiningClay.where(permanentWater,0).selfMask();
var connectClay = newMiningClay.connectedPixelCount(25);
var newMiningClay = newMiningClay.updateMask(connectClay.gt(cpThreshold));
Map.addLayer(newMiningClay, {min:0, max:1, palette: ['DA09D6']}, 'Possible New Mining Area (loss of Clay)');

// IRON
// high iron - looks like it is picking up infrastructure 
// 2016
var miningIron2016 = beforeIndices.select('iron').gt(0.4).rename('miningIron').selfMask();
var miningIron2016 = miningIron2016.where(permanentWater,0).selfMask();
var connectIron2016 = miningIron2016.connectedPixelCount(25);
var miningIron2016 = miningIron2016.updateMask(connectIron2016.gt(cpThreshold));
Map.addLayer(miningIron2016, {min:0, max:1, palette: ['A9D3FE']}, 'Possible Infrastructure 2016 (Iron)');
// 2021
var miningIron2021 = afterIndices.select('iron').gt(0.4).rename('miningIron').selfMask();
var miningIron2021 = miningIron2021.where(permanentWater,0).selfMask();
var connectIron2021 = miningIron2021.connectedPixelCount(25);
var miningIron2021 = miningIron2021.updateMask(connectIron2021.gt(cpThreshold));
Map.addLayer(miningIron2021, {min:0, max:1, palette: ['2F94F9']}, 'Possible Infrastructure 2021 (Iron)');
// iron gain - potential mining activies increase -> more infrastructure built
var differenceIron = afterIndices.select('iron').divide(beforeIndices.select('iron'));
var threshold = 1.3; // trial and error tried a few different thresholds
var newMiningIron = differenceIron.gt(threshold).rename('newMiningIron').selfMask();
var newMiningIron = newMiningIron.where(permanentWater,0).selfMask();
var connectIron = newMiningIron.connectedPixelCount(25); 
var newMiningIron = newMiningIron.updateMask(connectIron.gt(cpThreshold));
Map.addLayer(newMiningIron, {min:0, max:1, palette: ['2004E7']}, 'Possible New Mining Infrastructure (Iron)');

// NDMI - could not tell much - tried to use it to find new tailing storage bodies of water, could not
// 2016
// var miningNDMI2016 = beforeIndices.select('ndmi').gt(.15).rename('miningNDMI').selfMask();
// //var miningNDMI2016 = miningNDMI2016.where(permanentWater,0).selfMask();
// //var connectNDMI2016 = miningNDMI2016.connectedPixelCount(25);
// //var miningNDMI2016 = miningNDMI2016.updateMask(connectNDMI2016.gt(cpThreshold));
// Map.addLayer(miningNDMI2016, {min:0, max:1, palette: ['yellow']}, 'High Moisture 2016 (NDMI)');
// // 2021
// var miningNDMI2021 = afterIndices.select('ndmi').gt(.15).rename('miningNDMI').selfMask();
// //var miningNDMI2021 = miningNDMI2021.where(permanentWater,0).selfMask();
// //var connectNDMI2021 = miningNDMI2021.connectedPixelCount(25);
// //var miningNDMI2021 = miningNDMI2021.updateMask(connectNDMI2021.gt(cpThreshold));
// Map.addLayer(miningNDMI2021, {min:0, max:1, palette: ['orange']}, 'High Moisture 2021 (NDMI)');
// //ndmi gain
// var differenceNDMI = afterIndices.select('ndmi').subtract(beforeIndices.select('ndmi'));
// var threshold = 0.1;
// var newMiningNDMI = differenceNDMI.gt(threshold).rename('newMiningNDMI').selfMask();
// var newMiningNDMI = newMiningNDMI.where(permanentWater,0).selfMask();
// var connectNDMI = newMiningNDMI.connectedPixelCount(25);
// var newMiningNDMI = newMiningNDMI.updateMask(connectNDMI.gt(cpThreshold));
// Map.addLayer(newMiningNDMI, {min:0, max:1, palette: ['red']}, 'New Moisture (NDMI)');

// combine for mine area estimate - low NDVI, low Clay, high Iron
// 2016
miningNDVI2016 = miningNDVI2016.select('miningNDVI').rename('mining');
miningClay2016 = miningClay2016.select('miningClay').rename('mining');
miningIron2016 = miningIron2016.select('miningIron').rename('mining');
var pMines2016 = ee.ImageCollection([miningNDVI2016, miningClay2016, miningIron2016]).mosaic();
Map.addLayer(pMines2016, {min:0, max:1, palette: ['orange']}, 'Initial Mine Estimate 2016');
var mineSize2016 = pMines2016.select('mining')
  .connectedPixelCount({
    maxSize: 128, eightConnected: true
  });
var pixelArea = ee.Image.pixelArea();
var mineArea2016 = mineSize2016.multiply(pixelArea);
var areaMask2016 = mineArea2016.gte(200000); //m^2
pMines2016 = pMines2016.updateMask(areaMask2016);
Map.addLayer(pMines2016, {min:0, max:1, palette: ['red']}, 'Mine Estimate 2016');

// 2021
miningNDVI2021 = miningNDVI2021.select('miningNDVI').rename('mining');
miningClay2021 = miningClay2021.select('miningClay').rename('mining');
miningIron2021 = miningIron2021.select('miningIron').rename('mining');
var pMines2021 = ee.ImageCollection([miningNDVI2021, miningClay2021, miningIron2021]).mosaic();
Map.addLayer(pMines2021, {min:0, max:1, palette: ['orange']}, 'Initial Mine Estimate 2021');
var mineSize2021 = pMines2021.select('mining')
  .connectedPixelCount({
    maxSize: 128, eightConnected: true
  });
var mineArea2021 = mineSize2021.multiply(pixelArea);
var areaMask2021 = mineArea2021.gte(200000); //m^2
pMines2021 = pMines2021.updateMask(areaMask2021);
Map.addLayer(pMines2021, {min:0, max:1, palette: ['red']}, 'Mine Estimate 2021');

Map.addLayer(mines, {color: 'E6EAEE'}, 'mines'); // light gray

// LEGEND
var legend = ui.Panel({style: {position: 'middle-right', padding: '8px 15px'}});
var makeRow = function(color, name) {
  var colorBox = ui.Label({
    style: {color: '#ffffff',
      backgroundColor: color,
      padding: '10px',
      margin: '0 0 4px 0',
    }
  });
  var description = ui.Label({
    value: name,
    style: {
      margin: '0px 0 4px 6px',
    }
  }); 
  return ui.Panel({
    widgets: [colorBox, description],
    layout: ui.Panel.Layout.Flow('horizontal')}
)};
var title = ui.Label({
  value: 'Legend',
  style: {fontWeight: 'bold',
    fontSize: '16px',
    margin: '0px 0 4px 0px'}});
    
legend.add(title);
// legend.add(makeRow('green','NDVI Level'));
// legend.add(makeRow('yellow', 'Low NDVI 2016'));
// legend.add(makeRow('orange', 'Low NDVI 2021'));
// legend.add(makeRow('red','NDVI Lost'));
// legend.add(makeRow('purple','VIGS Level'));
// legend.add(makeRow('D772FD','New Vegetation Stress (VIGS)')); // light purple
// legend.add(makeRow('brown','Clay Level'));
// legend.add(makeRow('FB9FF9','Low Clay 2016')); // light pink
// legend.add(makeRow('FF70FC','Low Clay 2021')); // medium pink
// legend.add(makeRow('DA09D6','Clay Lost')); // dark pink
// legend.add(makeRow('gray','Iron Level'));
// legend.add(makeRow('A9D3FE','Iron 2016')); // light blue
// legend.add(makeRow('2F94F9','Iron 2021')); // medium blue
// legend.add(makeRow('2004E7','Iron Gained')); // dark blue
// legend.add(makeRow('E6EAEE','Known Active Mine Locations')); // light gray
// legend.add(makeRow('0b4a8b', 'Region of Interest'));
// legend.add(makeRow('orange', 'Initial Mine Estimate'));
// legend.add(makeRow('red', 'Final Mine Estimate'));
// Map.add(legend);

//EXPORTING IMAGES
// var thumbnail = pMines2021.getThumbURL({
//   'min': 0,
//   'max': 0.3,
//   'palette': ['FF0000'],
//   'dimensions': 1000,
//   'region': geometry,
// });
// print(thumbnail);
